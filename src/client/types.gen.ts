// This file is auto-generated by @hey-api/openapi-ts

export type AccessTokenResponse = {
    readonly tokenType?: string | null;
    accessToken: string | null;
    expiresIn: number;
    refreshToken: string | null;
};

export type ForgotPasswordRequest = {
    email: string | null;
};

export type HttpValidationProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    errors?: {
        [key: string]: Array<string>;
    } | null;
    [key: string]: unknown | (string | null) | (string | null) | (number | null) | (string | null) | (string | null) | ({
        [key: string]: Array<string>;
    } | null) | undefined;
};

export type InfoRequest = {
    newEmail?: string | null;
    newPassword?: string | null;
    oldPassword?: string | null;
};

export type InfoResponse = {
    email: string | null;
    isEmailConfirmed: boolean;
};

export type LoginRequest = {
    email: string | null;
    password: string | null;
    twoFactorCode?: string | null;
    twoFactorRecoveryCode?: string | null;
};

export type Product = {
    id?: number;
    name?: string | null;
    productCode?: string | null;
    productGroupId?: number | null;
    productGroup?: ProductGroup;
    ownerId?: string;
    supplierId?: number | null;
    productGroupProductMaps?: Array<ProductGroupProductMap> | null;
    productTypeId?: number | null;
    productType?: ProductType;
    note?: string | null;
    productMetas?: Array<ProductMeta> | null;
    productPrices?: Array<ProductPrice> | null;
    buyPrice?: number | null;
    unitTypeId?: number | null;
    unitType?: UnitType;
};

export type ProductGroup = {
    id?: number;
    name?: string | null;
    code?: string | null;
    ownerId?: string;
    description?: string | null;
    externalCode?: string | null;
    isAvailable?: boolean;
    parentProductGroupId?: number | null;
    image?: string | null;
    slug?: string | null;
    productGroupChilds?: Array<ProductGroup> | null;
    productGroupProductMaps?: Array<ProductGroupProductMap> | null;
    showInTree?: boolean | null;
    createdOn?: string;
    updatedOn?: string | null;
    heurekaCategory?: string | null;
    zboziCategory?: string | null;
};

export type ProductGroupProductMap = {
    id?: number;
    idProduct?: number;
    idProductGroup?: number;
    createdOn?: string;
    product?: Product;
    productGroup?: ProductGroup;
};

export type ProductMeta = {
    code?: string | null;
    value?: string | null;
    id?: number;
    productId?: number;
};

export type ProductPrice = {
    id?: number;
    productId?: number;
    price?: number;
    quantityMin?: number | null;
    quantityMax?: number | null;
    description?: string | null;
    currencyCode?: string | null;
    productPriceTypeCode?: string | null;
    createdOn?: string;
    updatedOn?: string | null;
    customerId?: number | null;
    unitTypeId?: number;
    unitType?: UnitType;
    taxVatId?: number | null;
    taxVat?: TaxVat;
    unitCount?: number | null;
};

export type ProductType = {
    id?: number;
    code?: string | null;
    name?: string | null;
    organizationId?: string | null;
};

export type RefreshRequest = {
    refreshToken: string | null;
};

export type RegisterRequest = {
    email: string | null;
    password: string | null;
};

export type ResendConfirmationEmailRequest = {
    email: string | null;
};

export type ResetPasswordRequest = {
    email: string | null;
    resetCode: string | null;
    newPassword: string | null;
};

export type StockBarCode = {
    id?: string;
    stockProductId?: number;
    amount?: number | null;
    barCode?: string | null;
};

export type StockDocument = {
    id?: string;
    stockDocumentNumber?: string | null;
    orderNumber?: string | null;
    customerId?: number | null;
    customerName?: string | null;
    customerStreet?: string | null;
    customerCity?: string | null;
    customerPostalCode?: string | null;
    customerState?: string | null;
    supplierId?: number | null;
    supplierName?: string | null;
    supplierStreet?: string | null;
    supplierCity?: string | null;
    supplierPostalCode?: string | null;
    supplierState?: string | null;
    issueDate?: string;
    deliveryDate?: string | null;
    expeditionDate?: string | null;
    createdOn?: string;
    cancelledOn?: string | null;
    ownerId?: string;
    stockDocumentItems?: Array<StockDocumentItem> | null;
    note?: string | null;
    customerCompanyIdentification?: string | null;
    customerTaxIdentification?: string | null;
    supplierCompanyIdentification?: string | null;
    supplierTaxIdentification?: string | null;
    externalNumber?: string | null;
    warehousePlaces?: Array<WarehousePlace> | null;
    stockDocumentType?: StockDocumentType;
    stockDocumentTypeId?: string | null;
};

export type StockDocumentItem = {
    id?: string;
    name?: string | null;
    quantity?: number;
    stockPrice?: number | null;
    unit?: string | null;
    stockProductId?: number;
    stockProduct?: StockProduct;
    stockDocumentId?: string;
    stockDocument?: StockDocument;
    externalCode?: string | null;
    lineNumber?: number | null;
    quantityMoved?: number | null;
    orderItemId?: number | null;
};

export type StockDocumentType = {
    id?: string;
    code?: string | null;
    name?: string | null;
    organizationId?: string | null;
    mask?: string | null;
    nextNumber?: string | null;
    stockDocuments?: Array<StockDocument> | null;
};

export type StockItem = {
    id?: number;
    stockProductId?: number;
    stockProduct?: StockProduct;
    warehousePlaceId?: number;
    warehousePlace?: WarehousePlace;
    value?: number | null;
    price?: number | null;
    note?: string | null;
};

export type StockItemApiModel = {
    id?: number;
    warehousePlaceCode?: string | null;
    warehousePlaceId?: number;
    value?: number | null;
};

export type StockMovement = {
    id?: number;
    sourcePlaceId?: number | null;
    sourcePlace?: WarehousePlace;
    destinationPlaceId?: number | null;
    destinationPlace?: WarehousePlace;
    stockProductId?: number;
    stockProduct?: StockProduct;
    value?: number;
    createdOnUtc?: string;
    movedOnUtc?: string;
    movedBy?: string;
    lineNumber?: number | null;
};

export type StockMovementApiModel = {
    stockDocumentId?: string;
    stockMovements?: Array<StockMovementItemApiModel> | null;
};

export type StockMovementItemApiModel = {
    id?: number;
    stockProductId?: number;
    stockProduct?: StockProduct;
    stockItems?: Array<StockItemApiModel> | null;
    place?: string | null;
    value?: number | null;
    lineNumber?: number | null;
};

export type StockProduct = {
    id?: number;
    name?: string | null;
    partNumber?: string | null;
    code?: string | null;
    width?: number | null;
    height?: number | null;
    depth?: number | null;
    weight?: number | null;
    stockItems?: Array<StockItem> | null;
    stockMovements?: Array<StockMovement> | null;
    stockBarCodes?: Array<StockBarCode> | null;
    ownerId?: string;
    note?: string | null;
    stockDocumentItems?: Array<StockDocumentItem> | null;
    productId?: number | null;
    product?: Product;
};

export type TaxVat = {
    id?: number;
    value?: number;
};

export type TwoFactorRequest = {
    enable?: boolean | null;
    twoFactorCode?: string | null;
    resetSharedKey?: boolean;
    resetRecoveryCodes?: boolean;
    forgetMachine?: boolean;
};

export type TwoFactorResponse = {
    sharedKey: string | null;
    recoveryCodesLeft: number;
    recoveryCodes?: Array<string> | null;
    isTwoFactorEnabled: boolean;
    isMachineRemembered: boolean;
};

export type UnitType = {
    id?: number;
    code?: string | null;
    name?: string | null;
};

export type Warehouse = {
    id?: number;
    name?: string | null;
    code?: string | null;
    warehousePlaces?: Array<WarehousePlace> | null;
    organizationId?: string;
    isImport?: boolean;
    isExport?: boolean;
};

export type WarehousePlace = {
    id?: number;
    name?: string | null;
    code?: string | null;
    stockItems?: Array<StockItem> | null;
    stockMovementsFrom?: Array<StockMovement> | null;
    stockMovementsTo?: Array<StockMovement> | null;
    warehouseId?: number;
    warehouse?: Warehouse;
    stockDocumentId?: string | null;
};

export type GetApiStockDocumentApiData = {
    body?: never;
    path?: never;
    query?: {
        type?: string;
        sortOrder?: string;
        searchString?: string;
        currentFilter?: string;
        page?: number;
    };
    url: '/api/StockDocumentApi';
};

export type GetApiStockDocumentApiResponses = {
    /**
     * OK
     */
    200: Array<StockDocument>;
};

export type GetApiStockDocumentApiResponse = GetApiStockDocumentApiResponses[keyof GetApiStockDocumentApiResponses];

export type GetApiStockDocumentApiByStockDocumentNumberData = {
    body?: never;
    path: {
        stockDocumentNumber: string;
    };
    query?: never;
    url: '/api/StockDocumentApi/{stockDocumentNumber}';
};

export type GetApiStockDocumentApiByStockDocumentNumberResponses = {
    /**
     * OK
     */
    200: StockDocument;
};

export type GetApiStockDocumentApiByStockDocumentNumberResponse = GetApiStockDocumentApiByStockDocumentNumberResponses[keyof GetApiStockDocumentApiByStockDocumentNumberResponses];

export type GetApiStockMovementApiByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/StockMovementApi/{id}';
};

export type GetApiStockMovementApiByIdResponses = {
    /**
     * OK
     */
    200: StockMovementApiModel;
};

export type GetApiStockMovementApiByIdResponse = GetApiStockMovementApiByIdResponses[keyof GetApiStockMovementApiByIdResponses];

export type PostApiStockMovementApiData = {
    body?: StockMovementApiModel;
    path?: never;
    query?: never;
    url: '/api/StockMovementApi';
};

export type PostApiStockMovementApiResponses = {
    /**
     * OK
     */
    200: StockMovementApiModel;
};

export type PostApiStockMovementApiResponse = PostApiStockMovementApiResponses[keyof PostApiStockMovementApiResponses];

export type PostApiStockMovementApiPrintImportLabelData = {
    body?: never;
    path?: never;
    query?: {
        id?: number;
        count?: number;
    };
    url: '/api/StockMovementApi/PrintImportLabel';
};

export type PostApiStockMovementApiPrintImportLabelResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiStockMovementApiPrintExportLabelData = {
    body?: never;
    path?: never;
    query?: {
        id?: number;
        quantity?: number;
        stockItemId?: number;
    };
    url: '/api/StockMovementApi/PrintExportLabel';
};

export type PostApiStockMovementApiPrintExportLabelResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostRegisterData = {
    body: RegisterRequest;
    path?: never;
    query?: never;
    url: '/register';
};

export type PostRegisterErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
};

export type PostRegisterError = PostRegisterErrors[keyof PostRegisterErrors];

export type PostRegisterResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostLoginData = {
    body: LoginRequest;
    path?: never;
    query?: {
        useCookies?: boolean;
        useSessionCookies?: boolean;
    };
    url: '/login';
};

export type PostLoginResponses = {
    /**
     * OK
     */
    200: AccessTokenResponse;
};

export type PostLoginResponse = PostLoginResponses[keyof PostLoginResponses];

export type PostRefreshData = {
    body: RefreshRequest;
    path?: never;
    query?: never;
    url: '/refresh';
};

export type PostRefreshResponses = {
    /**
     * OK
     */
    200: AccessTokenResponse;
};

export type PostRefreshResponse = PostRefreshResponses[keyof PostRefreshResponses];

export type MapIdentityApiConfirmEmailData = {
    body?: never;
    path?: never;
    query: {
        userId: string;
        code: string;
        changedEmail?: string;
    };
    url: '/confirmEmail';
};

export type MapIdentityApiConfirmEmailResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostResendConfirmationEmailData = {
    body: ResendConfirmationEmailRequest;
    path?: never;
    query?: never;
    url: '/resendConfirmationEmail';
};

export type PostResendConfirmationEmailResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostForgotPasswordData = {
    body: ForgotPasswordRequest;
    path?: never;
    query?: never;
    url: '/forgotPassword';
};

export type PostForgotPasswordErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
};

export type PostForgotPasswordError = PostForgotPasswordErrors[keyof PostForgotPasswordErrors];

export type PostForgotPasswordResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostResetPasswordData = {
    body: ResetPasswordRequest;
    path?: never;
    query?: never;
    url: '/resetPassword';
};

export type PostResetPasswordErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
};

export type PostResetPasswordError = PostResetPasswordErrors[keyof PostResetPasswordErrors];

export type PostResetPasswordResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostManage2FaData = {
    body: TwoFactorRequest;
    path?: never;
    query?: never;
    url: '/manage/2fa';
};

export type PostManage2FaErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
    /**
     * Not Found
     */
    404: unknown;
};

export type PostManage2FaError = PostManage2FaErrors[keyof PostManage2FaErrors];

export type PostManage2FaResponses = {
    /**
     * OK
     */
    200: TwoFactorResponse;
};

export type PostManage2FaResponse = PostManage2FaResponses[keyof PostManage2FaResponses];

export type GetManageInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/manage/info';
};

export type GetManageInfoErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetManageInfoError = GetManageInfoErrors[keyof GetManageInfoErrors];

export type GetManageInfoResponses = {
    /**
     * OK
     */
    200: InfoResponse;
};

export type GetManageInfoResponse = GetManageInfoResponses[keyof GetManageInfoResponses];

export type PostManageInfoData = {
    body: InfoRequest;
    path?: never;
    query?: never;
    url: '/manage/info';
};

export type PostManageInfoErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
    /**
     * Not Found
     */
    404: unknown;
};

export type PostManageInfoError = PostManageInfoErrors[keyof PostManageInfoErrors];

export type PostManageInfoResponses = {
    /**
     * OK
     */
    200: InfoResponse;
};

export type PostManageInfoResponse = PostManageInfoResponses[keyof PostManageInfoResponses];

export type GetApiWarehousePlaceApiData = {
    body?: never;
    path?: never;
    query?: {
        searchString?: string;
        allowAll?: boolean;
        stockProductId?: number;
    };
    url: '/api/WarehousePlaceApi';
};

export type GetApiWarehousePlaceApiResponses = {
    /**
     * OK
     */
    200: Array<WarehousePlace>;
};

export type GetApiWarehousePlaceApiResponse = GetApiWarehousePlaceApiResponses[keyof GetApiWarehousePlaceApiResponses];

export type ClientOptions = {
    baseUrl: 'http://138.199.147.236:8080' | (string & {});
};